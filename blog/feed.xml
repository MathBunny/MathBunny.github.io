<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/blog/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://localhost:4000/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/blog/" rel="alternate" type="text/html" /><updated>2018-12-29T22:52:04-05:00</updated><id>http://localhost:4000/blog//</id><title type="html">Horatiu’s Blog</title><subtitle>My blog, discussing topics from university life.
</subtitle><entry><title type="html">Work Term #3: Scalable cloud metadata search</title><link href="http://localhost:4000/blog/coop/2018/11/24/thirdcoop.html" rel="alternate" type="text/html" title="Work Term #3: Scalable cloud metadata search" /><published>2018-11-24T18:49:29-05:00</published><updated>2018-11-24T18:49:29-05:00</updated><id>http://localhost:4000/blog/coop/2018/11/24/thirdcoop</id><content type="html" xml:base="http://localhost:4000/blog/coop/2018/11/24/thirdcoop.html">&lt;p&gt;&lt;img src=&quot;/blog/assets/yelp-logo-2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;During my third co-op, I developed and shipped a scalable cloud metadata search service at Yelp. The core service is written in Python, and I used Terraform and Puppet to provision and configure the infrastructure promoting reproducability and scalability. This is hosted on AWS, more specifically using a serverless architecture leveraging API Gateway and Lambda.&lt;/p&gt;

&lt;p&gt;What is a &lt;em&gt;cloud metadata search service&lt;/em&gt;? Put simply, it keeps an inventory of all the servers that Yelp has and any facts about them. Some examples of facts include software that is provisioned on that machine, operating system information, memory available, geographical regions and hundreds of other fields.&lt;/p&gt;

&lt;p&gt;This service presents the following features:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Expressive discovery using custom DSL querying capabilities in 2 languages (JSON and query string)&lt;/li&gt;
  &lt;li&gt;Significantly faster querying (&amp;lt;100ms per query, real-time event-based invalidation, 5 minute refreshes)&lt;/li&gt;
  &lt;li&gt;Highly scalable serverless architecture which is reproducable and configured using code&lt;/li&gt;
  &lt;li&gt;Deployment process using S3 and Jenkins, unit tests and end-to-end tests using Docker&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My favourite part of this project is that I went through all stages of the development process, and got to see something created from scratch go through to production!&lt;/p&gt;

&lt;p&gt;Formerly, there was a solution using MCollective that would distribute the request to all known hosts and fetch information then. The issue with that solution is that the query time is essentially a function of the slowest host to respond - since it would wait for all hosts to respond and filter afterwards.&lt;/p&gt;

&lt;p&gt;Meanwhile, the inventory service works in the other direction. Instead, each host contains a cron-job that emits metadata on that machine to the inventory service.&lt;/p&gt;

&lt;p&gt;The service has its own DSL query language, which can be provided in JSON:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;filter&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;AND&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;args&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
             &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;matching&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
             &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;arg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hostname: interndev1-us[east,west]1dev*&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
         &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
             &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;matching&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
             &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;arg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cpu_count &amp;gt;= 16&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
         &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;sort&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;uptime asc, hostname desc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;limit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;offset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;index_epoch_threshold&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Alternatively using the string query syntax (inspired by Apache Solr’s streaming syntax):&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ search(filter(AND(&quot;hostname: interndev1-us[east,west]1dev*&quot;, &quot;cpu_count &amp;gt;= 16&quot;)), sort(&quot;uptime asc, hostname desc&quot;), limit(1000), offset(10), index_epoch_threshold(2000))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As part of this project, I also implemented query parsers for both that convert the associated query into an Elasticsearch URI query. This included making some interesting optimizations along with a basic n-ary preorder tree traversal to assemble the query string.&lt;/p&gt;

&lt;p&gt;One of the greatest challenges was dealing with a schemaless design. Since there’s hundreds of fields, it isn’t managable to manually introduce every field in a fixed schema since teams are constantly adding or removing fields. Luckily, Elasticsearch provides the ability to give a &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-mapping.html&quot;&gt;dynamic schema&lt;/a&gt;, where it infers type. However, this was quickly proven unreliable because we experienced type collisions (ex: initially a field was &lt;code class=&quot;highlighter-rouge&quot;&gt;bool&lt;/code&gt;, later it would be indexed as &lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt;). Such a type collision would yield errors when ingesting metadata - later invalidating that instance from search results and returning incomplete data!&lt;/p&gt;

&lt;p&gt;The solution to this was leveraging a &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-templates.html&quot;&gt;dynamic templated mapping&lt;/a&gt;. We would have four types: &lt;code class=&quot;highlighter-rouge&quot;&gt;*_str&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;*_bool&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;*_long&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;*_float&lt;/code&gt;. The service would append to each field being ingested the type it thinks would be the type. This type would always conform with the equivalent Elasticsearch type, hence all ingestion requests would go through. The only concern now becomes - fields can sometimes be more sparse and scattered across multiple fields - at worst 4x worse performance! However, this rarely the case, and providing the guaranteed that documents will be ingested is more critical than &lt;em&gt;slightly&lt;/em&gt; slower retrieval.&lt;/p&gt;

&lt;p&gt;How does this work for retrievals? All the retrieval queries would need to be appropriately tokenized, have type introspection occur and inspect the mapping of the index, and then adjusted accordingly. This includes expanding any numerical field queries to be &lt;code class=&quot;highlighter-rouge&quot;&gt;(field_long:val OR field_float:val)&lt;/code&gt;. While a tricky process for all the arguments that can be passed to the inventory service, the strict DSL and with a careful implementation and lots of unit tests it worked well.&lt;/p&gt;

&lt;p&gt;The final benchmarks using Apache Bench and AWS CloudWatch yield &amp;lt;150ms p99 query times for indexing and &amp;lt;90ms p99 search queries while exceeding one million API requests daily.&lt;/p&gt;

&lt;p&gt;To conclude, I learned a lot this term with an amazing mentor who was extremely helpful throughout the entire process - something which I think is invaluable and definitely made this one of my favourite terms.&lt;/p&gt;</content><summary type="html"></summary></entry><entry><title type="html">YouTube: Analytics on 1.2 million views</title><link href="http://localhost:4000/blog/programming/2018/11/12/youtube.html" rel="alternate" type="text/html" title="YouTube: Analytics on 1.2 million views" /><published>2018-11-12T18:49:29-05:00</published><updated>2018-11-12T18:49:29-05:00</updated><id>http://localhost:4000/blog/programming/2018/11/12/youtube</id><content type="html" xml:base="http://localhost:4000/blog/programming/2018/11/12/youtube.html">&lt;p&gt;&lt;img src=&quot;/blog/assets/youtube-cover.png&quot; alt=&quot;link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’ve been running my YouTube channel &lt;a href=&quot;https://www.youtube.com/user/ComputerBunnyMath123&quot; target=&quot;_blank&quot;&gt;SoftwareEngenius&lt;/a&gt; for the past six years. Initially, it started as a place to post videos regarding my hobbies (mostly computer tutorials and programming videos). It has mostly stayed that way, with more recent videos being very focused on software development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Sometimes it may count under 1.2 million -  it’s either statisics not updated or unlisted videos.&lt;/p&gt;

&lt;h4&gt; Motivation&lt;/h4&gt;
&lt;p&gt;I had a fantastic experience building out my YouTube channel, and I don’t regret the many hours spent on this channel. The following, however, is worth noting:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The goal of the channel isn’t about “becoming popular” or “getting rich”, rather it was more for me to genuinely produce content that I thought had some value. Unfortunately, this also means I don’t have much interest in production quality, and felt like getting my thoughts out are more important than spending time editing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I believe I was successful in reaching my goal. I was able to make a clear amount of videos covering a wide span of topics, though it clearly shows as some of my videos aren’t of the best quality. From 2013-2015 I gained momentum and my channel was growing, and to keep that going I was heavily invested in producing more quantity, which at the time led to saturation in my video content.&lt;/p&gt;

&lt;h4&gt; Beginning: 2012/2013&lt;/h4&gt;
&lt;p&gt;This was the starting phase of the channel, back when it was called &lt;code class=&quot;highlighter-rouge&quot;&gt;ComputerBunnyMath123&lt;/code&gt;. Clearly, I didn’t have any niche in mind, so I began by posting completely random videos including programming tutorials, software videos and some games including Minecraft, Chess and Brain Age 2. I didn’t get many views at the start, only after adding more content (~20 videos) did I start getting over 1,000 views per month.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/youtube-growth.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4&gt; Growing Content and Saturation: 2013/2014/2015&lt;/h4&gt;
&lt;p&gt;This period I would characterize as gaining many more views, which led me to wanting more and produce vasts amounts of videos. It was mostly sparked by my &lt;a href=&quot;https://www.youtube.com/watch?v=MEvY27PB6ZU&quot; target=&quot;_blank&quot;&gt;Ripley’s Aquarium video&lt;/a&gt;, which got over 20,000 views early on and motivated me to continue producing random content. This continued for some time, and I spent most of the Summer of 2014 reaching out to companies to review their products.&lt;/p&gt;

&lt;p&gt;I wouldn’t say this period of time was used effectively - I ended up greatly saturating my channel with a wide array of random topics which led to very poor user retention.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/youtube-growing.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4&gt; Focused and Slowing Growth: 2016/2017&lt;/h4&gt;

&lt;p&gt;During this time period I didn’t have a lot of time to devote to making videos (I was busy applying to university or in my freshmen year), so I had to focus my efforts. By this time, I gained some exposure to various Computer Science concepts more in-depth, and made the decision to change the focus of the channel to be &lt;em&gt;only software related&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/youtube-maturing.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4&gt; Matured and Rarely Updated: 2017 onwards&lt;/h4&gt;
&lt;p&gt;I hadn’t uploaded many videos recently, occasionally only when I visit an interesting concept or learn something more niche I would bother to make a new video. I don’t actively pursuit creating videos for the views or fame. Instead, if I find something cool I’ll share it! Some notable videos during this time period includes my functional programming channel or an &lt;em&gt;upcoming series I am working on&lt;/em&gt;!&lt;/p&gt;

&lt;p&gt;More interestingly though, is despite the lack of posting videos I didn’t drop much at all in terms of revenue or views. Personally, I find this surprising because many of my videos tags included &lt;code class=&quot;highlighter-rouge&quot;&gt;2014&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;2015&lt;/code&gt;, but seems despite this I’m still getting traffic.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/youtube-current.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4&gt; Future Plans&lt;/h4&gt;

&lt;p&gt;I have no plans for this channel. If I find something cool - I will make a video and post it :)&lt;/p&gt;

&lt;h4&gt; More Analytics!&lt;/h4&gt;

&lt;p&gt;Who doesn’t enjoy numbers and charts? Below are standard analytics provided by YouTube.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/youtube-views.png&quot; alt=&quot;link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately, my most popular videos aren’t representative at all of my channel as a whole - but this goes to show how luck with tags and spotting a niche can help bring in more viewers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/youtube-device.png&quot; alt=&quot;link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I find it interesting how the time spent on mobile is almost as much as on the computer - and that such a large proportion of viewers watch on phone or tablet.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/youtube-traffic.png&quot; alt=&quot;link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Interestingly, it looks like YouTube’s recommender systems worked in my favour from August 2014 to February 2015 and then rarely suggested my videos until late 2016….&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/youtube-age.png&quot; alt=&quot;link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are no surprises here, the vast majority of viewers will be “tech savvy” and likely near college age.&lt;/p&gt;

&lt;p&gt;All in all, hope you enjoyed these facts and numbers :)&lt;/p&gt;

&lt;!-- ![link](/blog/assets/youtube-os.png)

Interestingly, there were more Macintosh users than Windows until around late 2015. This is likely because I used to have more content for Mac users. More interestingly, is that Mac and iOS users tend to watch my videos for longer!


![link](/blog/assets/youtube-functional.png)
--&gt;</content><summary type="html"></summary></entry><entry><title type="html">Evolution of stravawindanalysis.com</title><link href="http://localhost:4000/blog/programming/2018/11/09/strava.html" rel="alternate" type="text/html" title="Evolution of stravawindanalysis.com" /><published>2018-11-09T18:49:29-05:00</published><updated>2018-11-09T18:49:29-05:00</updated><id>http://localhost:4000/blog/programming/2018/11/09/strava</id><content type="html" xml:base="http://localhost:4000/blog/programming/2018/11/09/strava.html">&lt;style type=&quot;text/css&quot;&gt;
code.has-jax {font: inherit; font-size: 100%; background: inherit; border: inherit;}
&lt;/style&gt;

&lt;script type=&quot;text/x-mathjax-config&quot;&gt;
MathJax.Hub.Config({
    tex2jax: {
        inlineMath: [['$','$'], ['\\(','\\)']],
        skipTags: ['script', 'noscript', 'style', 'textarea', 'pre'] // removed 'code' entry
    }
});
MathJax.Hub.Queue(function() {
    var all = MathJax.Hub.getAllJax(), i;
    for(i = 0; i &lt; all.length; i += 1) {
        all[i].SourceElement().parentNode.className += ' has-jax';
    }
});
&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/MathJax.js?config=TeX-AMS_HTML-full&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/stravawindanalysis-logo.png&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt; Table of contents &lt;/b&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#intro&quot;&gt; Motivation and Introduction &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#redesign&quot;&gt; Extensive Redesign &lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#features&quot;&gt; Features&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#architecture&quot;&gt; Architectural overview &lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#models&quot;&gt; Models and algorithms&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#infrastructure&quot;&gt; Site infrastructure&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#youtube&quot;&gt; YouTube demo&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#original&quot;&gt; Original Design &lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#origarchitecture&quot;&gt; Architectural overview &lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#origyoutube&quot;&gt; YouTube demo &lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#future&quot;&gt; Future Plans &lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#global&quot;&gt; Global neural network models &lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;intro&quot;&gt; Motivation and Introduction &lt;/h3&gt;

&lt;p&gt;During high-school I was wondering if there was some way to determine how much wind affects road cyclists’ speeds.&lt;/p&gt;

&lt;p&gt;Strava is a popular cycling platform, where riders “record” their rides and share with others. This is accomplished by using GPS that periodically captures longitutde/latitude and timestamps it in GPX format - so at any given moment Strava can recollect your position and calculate your speed. Segments are defined roughly as a string following a polyline starting from one coordinate and ending at another coordinate with a predefined shape. Over time, many people upload their rides and we can get a leaderboard of different people’s attempts at segments over time.&lt;/p&gt;

&lt;p&gt;The critical issue with this segment functionality is that conditions aren’t always equal - if you have a 50km/h tailwind you will go have to displace less wattage to reach that winning speed - but how much does it really help you? Introducing Strava Wind Analysis!&lt;/p&gt;

&lt;h2 id=&quot;redesign&quot;&gt; Extensive Redesign &lt;/h2&gt;
&lt;p&gt;The most apparent issue with the initial design is the absence of a backend which severely limits the capabilities of the web app since everything resides client-sided. The newer design features a cloud-hosted architecture stored on Amazon Web Services, opening a world of possibilities.&lt;/p&gt;

&lt;h3 id=&quot;features&quot;&gt; Features &lt;/h3&gt;
&lt;p&gt;The newer version of the website expands beyond simply weather analytics to providing both historical and segment ride analytics. There are feature additions throughout, including:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Improved regression models for cycling wind impact determination&lt;/li&gt;
  &lt;li&gt;Content-based segment recommendation engine for scrolling feed&lt;/li&gt;
  &lt;li&gt;Interactive charts using chart.js&lt;/li&gt;
  &lt;li&gt;Performance analytics on historical segment and aggregate data&lt;/li&gt;
  &lt;li&gt;Individual modals with athlete-specific statistics on segment leaderboard&lt;/li&gt;
  &lt;li&gt;Linear regression and interpolation tools using scikit-learn&lt;/li&gt;
  &lt;li&gt;Segment and ride filtering options (distance, speed, etc.)&lt;/li&gt;
  &lt;li&gt;Improved performance with Redis caching&lt;/li&gt;
  &lt;li&gt;Integration with MongoDB including weather API throttling and user profiles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After users login, they are presented with the feed page. Powered by a content-based recommender system, this feed aims at featuring segments that are recent and may be of interest.&lt;/p&gt;

&lt;p&gt;The new details page is redesigned, with tabs for different content for that segment.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/strava-details.png&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are modals now for individual athletes showing historical performance aggregate performance on segments. Similarily, there are modals on the ride selection screen showing a map of the ride.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/strava-modal.png&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The charting system allows the ability to do speed overlay for different athletes on a single chart.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/strava-comparison.png&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;architecture&quot;&gt; Architectural overview &lt;/h3&gt;
&lt;p&gt;The newer architecture runs on Amazon Web Services using EC2 instances and Route53 for Elastic IPs. The infrastructure is managed using Terraform, which allows for reproducability and high scalability.&lt;/p&gt;

&lt;p&gt;The core site is a monolithic repository written in Node.js leveraging Express to power the webserver layer, along with Handlebars as the templating engine for rendering the site headers and footers. The front-end leverages jQuery and Ink Framework. There is a seperate Python Flask service handling the machine learning components, which uses NumPy and Scikit-Learn for any statistical analysis and is communicated using a RESTful interface by the Node app. Both the Node and Python server are managed by PM2, which allows for thread forking and zero downtime restarts.&lt;/p&gt;

&lt;p&gt;Redis is used as an in-memory cache for API look-ups (30 minutes TTL), and provides lifetime caching for weather data requests from DarkSky. Elasticsearch provides an index for segment and rides by rides, which periodically indexes upon login based on a previously set epoch-update time. Lastly, MongoDB is used for user profiles including throttling for abusive users.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/strava-system.png&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;models&quot;&gt; Models and Algorithms &lt;/h3&gt;

&lt;h4&gt; Wind Impact Determination Algorithm &lt;/h4&gt;
&lt;p&gt;The core intent of the Strava Wind Analysis site is to numerically quantify the impact of wind conditions on a cycling segment. Since this isn’t a solved problem and there is no method to verify the validity of the results, over time the algorithm evolved to take into consideration more factors which increases the likelyhood of accuracy.&lt;/p&gt;

&lt;p&gt;The original algorithm used basic theory from relative physics, that is, we take two vectors representing the wind direction and ride direction, add then tip-to-tail, and then take the displacement vector which would be the resultant vector. The impact would be the delta between the original ride vector and the displacement.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/strava-relative.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The beginning set of improvements over the legacy vector-manipulation approach concerns drawing conclusions from the results of an empirical study on how wind affects cyclists. The following results are taken from Jobst Brandt’s &lt;em&gt;A Practical Analysis of Aerodynamic Drag&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The first observation is that the previous vector-based model falls victim to assuming that tailwind and headwind will equivalently affect riders which is incorrect.
&lt;img src=&quot;/blog/assets/strava-normalized.png&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The second observation is to provide a mapping for how much a difference in speed makes for the wind impact. This is of course very difficult, but can be best modelled using a function. What is this function?&lt;/p&gt;

&lt;p&gt;$f(x) = -0.004x^2 + 0.616x + 0.863$&lt;/p&gt;

&lt;p&gt;How was this equation generated? Using quadratic regression on empirical riding data in a wind tunnel (assuming that the head-wind is direct), and with a constant wattage it’s possible to interpolate values.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/strava-wind-graph.png&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Thus, $x$ is the wind-speed in direct head-wind, and $y$ would be the net change in wind-speed. Since wind isn’t always directed parallel to the cyclist, the former vector manipulation algorithm is executed but both units are turned into unit vectors, and then the displacement vector’s magnitude is multiplied by the value of this function yielding the final result.&lt;/p&gt;

&lt;p&gt;This works fairly well in practice, however there is more to consider. There is a plethora of data containing historical wind performance and the speed at which the cyclist rode. Ignoring factors (amount of effort or energy the rider places), it’s possible to use non-anomalous efforts as training data for a statistical model.&lt;/p&gt;

&lt;p&gt;Former segment efforts can be used as training data. Consider a function $H(x, y, z)$ where $x$ is the effort distance, $y$ is the effort slope, and $z$ is the direction-adjusted wind speed (see the former vector approach), and returns the expected segment effort speed. Clearly, every segment effort has values for $x$, $y$ and $z$ hence this becomes a classic application of regression and/or neural networks. At the end, calling the same function with $z=0$ will predict the speed without the influence of wind - hence $H(x, y, z) - H(x, y, 0)$ is the impact!&lt;/p&gt;

&lt;p&gt;First attempt used multivariate linear regression with several features including effort distance, moving time, ride bearing, average speed for the whole ride, wind speed and wind bearing. After normalizing the values with a standard scalar, applying the vector manipulation approach, and using a 70%/15%/15% training/cross-validation/test split, below are some sample results:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sample predicted vs actual
---
25.26km/h vs 29.28km/h
26.02km/h vs 28.65km/h
26.57km/h vs 28.04km/h
22.04km/h vs 22.6km/h
22.11km/h vs 21.74km/h
18.63km/h vs 19.85km/h
27.04km/h vs 29.26km/h
21.28km/h vs 23.02km/h
26.2km/h vs 27.28km/h
20.6km/h vs 22.46km/h
26.34km/h vs 29.62km/h
26.01km/h vs 27.42km/h
29.27km/h vs 29.55km/h
27.41km/h vs 29.61km/h
---
Root Mean Squared Error: 6.1968908459
Coefficients:  [-0.31109429 -0.49802149 -3.11181539]
Intercept:  25.9555685519
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;While the results are accurate on the most part, some results greatly increase the RMSE:&lt;/p&gt;

&lt;p&gt;$RMSE(y)=\frac{1}{N}\sqrt{\sum_i{(f(x_i) - y_i)^2}}$&lt;/p&gt;

&lt;p&gt;During actual segment efforts, this model is significant off inflating the expected result since most efforts during KOM attempts &lt;em&gt;are&lt;/em&gt; anomalous themselves! Hence, this model will be wrong, but that is OK since only $z$ is changing.&lt;/p&gt;

&lt;p&gt;The other approach is using neural networks. Using a multilayered perceptron neural network, a similar process was used as the multivariate linear regression model in terms of features and approach. While it certainly sounds fancy, using the Scikit-Learn library it makes it relatively straightforward to apply.&lt;/p&gt;

&lt;p&gt;The final results after doing some hyperparameter tuning (using the Stochastic Gradient Descent model):&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sample predicted vs actual
---
24.75km/h vs 22.36km/h
25.5km/h vs 32.15km/h
25.29km/h vs 18.81km/h
24.6km/h vs 28.44km/h
25.12km/h vs 29.28km/h
25.99km/h vs 28.65km/h
26.61km/h vs 28.04km/h
21.36km/h vs 22.6km/h
21.43km/h vs 21.74km/h
17.36km/h vs 19.85km/h
27.18km/h vs 29.26km/h
20.47km/h vs 23.02km/h
26.2km/h vs 27.28km/h
19.66km/h vs 22.46km/h
26.36km/h vs 29.62km/h
25.99km/h vs 27.42km/h
29.75km/h vs 29.55km/h
27.6km/h vs 29.61km/h
Root Mean Squared Error: 5.60815702584
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;While the root mean squared error is lower, this model performs better with the anomalous cases but poorer on median. With both models into consideration, the multivariate linear regression model remains the top choice as the core system for computing wind impact.&lt;/p&gt;

&lt;h4&gt; Infinite Scrolling Segment Feed Recommendation Algorithm &lt;/h4&gt;
&lt;p&gt;The motivator of the content-based feed from a product perspective is to provide:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Very fast way of showing relevant segments to the user (instead of searching for them)&lt;/li&gt;
  &lt;li&gt;Allow the user to discover potentially unique or anomalous segments&lt;/li&gt;
  &lt;li&gt;Provide an incentive for returning to the site by outlining fresh new content&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The most stressed factor is &lt;em&gt;new&lt;/em&gt; content, hence the recommender system heavily boosts more recent rides. As such, below are some factors taken into consideration when ranking segments:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;How recent was the ride that the segment took place on?&lt;/li&gt;
  &lt;li&gt;Has there been a KOM/QOM achieved?&lt;/li&gt;
  &lt;li&gt;Is there a new Personal Best or Top 10 rank achieved?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Another criteria for this recommender system is that it must be quick to retrieve results - since this is the first thing the user lands on once logging in. The rough algorithm looks as follows:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Lazily fetch ride data from Strava API in sets of 3 rides
    &lt;ul&gt;
      &lt;li&gt;Redis will cache the newer than &lt;code class=&quot;highlighter-rouge&quot;&gt;index-epoch&lt;/code&gt; rides faster than Elasticsearch indices&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Iterate through all segments from those rides and rank candidates
    &lt;ul&gt;
      &lt;li&gt;This will use the points system below&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;If there are less than &lt;code class=&quot;highlighter-rouge&quot;&gt;16&lt;/code&gt; segments retrieved, lazily load more until failure&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;How are segments ranked? This is computed as follows:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Factor&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Formula&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Factor Type&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Ride Recency&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;10x, 5x or 1x&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Multiplier&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;KOM/QOM Achievement&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;20&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Addition&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Leaderboard Ranking&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;20 - rank&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Addition&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Personal Best&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;5 - rank&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Addition&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
This systematic scoring system provides a heuristic for rankings segments. In recommender system theory, this qualifies as a content-based recommender system since we rank content based solely on discrete characteristics.&lt;/p&gt;

&lt;h3 id=&quot;youtube&quot;&gt; YouTube Demo &lt;/h3&gt;

&lt;iframe width=&quot;740&quot; height=&quot;430&quot; src=&quot;https://www.youtube.com/embed/3eSN6_m8yao&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h2&gt;&lt;br /&gt;&lt;/h2&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;original&quot;&gt; Original Design &lt;/h2&gt;
&lt;p&gt;For my first web-app ever, I created a single page web-app in high-school using client sided jQuery and JavaScript along with a simple vector manipulation algorithm. This design features both critical design flaws and is extremely limiting in terms of capabilities.&lt;/p&gt;

&lt;h3 id=&quot;origarchitecture&quot;&gt; Architectural Overview &lt;/h3&gt;
&lt;p&gt;As mention prior, everything is stored client-sided, so there is no session data persisted. The website design is created using Materialize CSS and jQuery. The core logic is written in JavaScript, which can actually be found at &lt;code class=&quot;highlighter-rouge&quot;&gt;src/js&lt;/code&gt;. The site interacts with the Strava API using OAuth, Google Maps API and Dark Sky API to fetch the weather data. The site can be found at &lt;code class=&quot;highlighter-rouge&quot;&gt;stravawindanalysis.com/legacy&lt;/code&gt;, with the exception of API keys which were stubbed with API calls to the newer backend.&lt;/p&gt;

&lt;p&gt;The simple algorithm worked by fetching the wind data, the ride direction, normalizing the vectors, scaling the vectors by their respective speeds, and then checking the displacement when added tip-to-tail.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/stravawindanalysis-legacy.png&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;origyoutube&quot;&gt; Original Design YouTube Demo &lt;/h3&gt;

&lt;iframe width=&quot;740&quot; height=&quot;430&quot; src=&quot;https://www.youtube.com/embed/v57Ok0zRMNI&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;future&quot;&gt; Future Plans &lt;/h2&gt;
&lt;h3 id=&quot;global&quot;&gt; Global Neural Networks &lt;/h3&gt;

&lt;p&gt;Extending from the idea of the current models, adding the ability to expand the training set to use information from other riders can allow for significantly more advanced capabilities. Additional features will be created dependent on the rider, for example the rider’s average speed, riding patterns, and then every user’s behavior can be contributed to a global state neural network.&lt;/p&gt;

&lt;p&gt;Of course, users can subscribe/unsubscribe from donating their personal data - but these capabilites will allow for pooling more data and attempting to create a more accurate model for estimating speed given the ride environment and player type.&lt;/p&gt;</content><summary type="html"></summary></entry><entry><title type="html">Postmortem: Tenderloin + Yet another stolen road bike</title><link href="http://localhost:4000/blog/cycling/2018/11/04/bike-stolen.html" rel="alternate" type="text/html" title="Postmortem: Tenderloin + Yet another stolen road bike" /><published>2018-11-04T18:49:29-05:00</published><updated>2018-11-04T18:49:29-05:00</updated><id>http://localhost:4000/blog/cycling/2018/11/04/bike-stolen</id><content type="html" xml:base="http://localhost:4000/blog/cycling/2018/11/04/bike-stolen.html">&lt;p&gt;On Saturday November 3, 2018 I decided to spend the day going on a warmup 65km ride down to Mountain View from San Francisco, meet up with a couple friends, then come back by Caltrain as preparation for a hard Sunday ride going up King’s Mountain.&lt;/p&gt;

&lt;p&gt;On the return trip, the Caltrain was closed for repairs, so I had to take a bus from San Bruno to San Francisco. I tried to put my bike inside the bus, but the driver refused stating that it’s against their policy - so I put it on the rack outside. Looking out the window into darkness, the bus drove comfortably on the highway until getting to Market and 6th avenue.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/sf-mta-rack.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There was a red light at Market and 6th avenue, and out of the corner appears one person who rushes to the front of the bus, and before I could blink snatches the bike off the rack. I saw it unfold entirely with my own eyes, but by the time I could react it was too late.&lt;/p&gt;

&lt;p&gt;The bus driver opened the door and I took a run for it, chasing the thief. I had my cycling shoes on, which if you aren’t aware allow me to clip my feet into my pedals. Of course, the disadvantage is that you can’t run in them - in fact even walking on pavement is difficult.&lt;/p&gt;

&lt;p&gt;To make matters worse, it wasn’t just me and that guy who snatched the bike - he had a couple friends joining the party as well. They actually followed me on other road bikes, and warned me to not even try running after him. Eventually I lost sight, and getting into a physical fight with several other guys on me wouldn’t be wise. The bus driver already called 911 and the police arrived.&lt;/p&gt;

&lt;h3 id=&quot;what-went-well&quot;&gt;What went well&lt;/h3&gt;

&lt;p&gt;Looking at the bright side first, there’s a couple things that went well.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;I didn’t have my wallet in my saddle bag (which could have been stolen in the process)&lt;/li&gt;
  &lt;li&gt;Did not get mugged in the process (so phone/wallet were ok)&lt;/li&gt;
  &lt;li&gt;No injuries occured&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As well, my initial instinct was to chase them. But if I did catch up to them - what would I gain?&lt;/p&gt;

&lt;p&gt;I may have knocked the guy off the bike, and taken off:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;I would need to clip-in my pedals fast enough + accelerate so he can’t chase me
    &lt;ul&gt;
      &lt;li&gt;I could hold ~55km/h for 60 seconds to get far enough from him&lt;/li&gt;
      &lt;li&gt;Crashing into people, cars or red lights are of concern to maintain that speed&lt;/li&gt;
      &lt;li&gt;The benefit is that I would keep my bike&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Success rate of clipping in on for both feet is ~15%, high failure rate&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If I failed to clip-in:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Extremely dangerous since I’d be in direct harm of the thief&lt;/li&gt;
  &lt;li&gt;Partial clip-in means that I’m basically bolted to the bike&lt;/li&gt;
  &lt;li&gt;It wasn’t just one person but at least one other
    &lt;ul&gt;
      &lt;li&gt;2 vs 1 and they likely have knives (which I’ve seen many people carry around)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below is a picture of sidewalk the thief rode on (though it happened at night):
&lt;img src=&quot;/blog/assets/sf-market-six.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;what-didnt-go-well&quot;&gt;What didn’t go well&lt;/h3&gt;

&lt;p&gt;I should have made sure my bike never leaves my hands. The issue with this is that you actually can’t lock the bike on the buses. I also explicitely asked to have the bike in the bus, but the driver refused.&lt;/p&gt;

&lt;p&gt;Lastly, I also didn’t have the serial number with me. When the police was there on the scene, it would have been very valuable to have the serial number with me.&lt;/p&gt;

&lt;h3 id=&quot;what-i-did-after-it-got-stolen&quot;&gt;What I did after it got stolen&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;The bus driver called 911 and I did as well after my failed chase - and the cops arrived on the scene&lt;/li&gt;
  &lt;li&gt;I showed bike pictures and described the thief - and they alerted nearby cops to be aware of the event
    &lt;ul&gt;
      &lt;li&gt;Interestingly, I overheard the radios police actually describing bikes being ridden in the area&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;After getting home, I retrieved the serial number and reported the incident online to the police&lt;/li&gt;
  &lt;li&gt;I religiously checked Kijiji, eBay and other websites for the bike or its respective components&lt;/li&gt;
  &lt;li&gt;Posted on Facebook groups making other people aware of the theft&lt;/li&gt;
  &lt;li&gt;Looked into renter’s insurance to see if I could make a claim&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;good-news&quot;&gt;Good news&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Update (November 13, 2018)&lt;/strong&gt;: My renter’s insurance happened to cover the entire road bike - so I got all my road bike’s value back and will be buying another one :)&lt;/p&gt;</content><summary type="html">On Saturday November 3, 2018 I decided to spend the day going on a warmup 65km ride down to Mountain View from San Francisco, meet up with a couple friends, then come back by Caltrain as preparation for a hard Sunday ride going up King’s Mountain.</summary></entry><entry><title type="html">Mount Tamalpais West Summit + Seven Sisters Climb</title><link href="http://localhost:4000/blog/cycling/2018/10/28/mt-tam.html" rel="alternate" type="text/html" title="Mount Tamalpais West Summit + Seven Sisters Climb" /><published>2018-10-28T19:49:29-04:00</published><updated>2018-10-28T19:49:29-04:00</updated><id>http://localhost:4000/blog/cycling/2018/10/28/mt-tam</id><content type="html" xml:base="http://localhost:4000/blog/cycling/2018/10/28/mt-tam.html">&lt;p&gt;In my eyes, the ability to, within 20 minutes of riding, be immersed with stunning views, nature and elevation is the single best perk of being in San Francisco. You cannot find anything like it near Waterloo or Toronto, and it feels like you in picturesque scene in a movie!&lt;/p&gt;

&lt;h3 id=&quot;gameplan&quot;&gt;Gameplan&lt;/h3&gt;
&lt;p&gt;I had no prior experience climbing for extended periods of time. Depending on the derivative you choose, the route can vary widely in distance and elevation.&lt;/p&gt;

&lt;p&gt;I chose one of the more difficult routes - which is doing the Alpine Dam, Seven Sisters and then the West Summit yielding 100km (62 miles) distance and 1500m (5000 feet) elevation gain.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/mount-tam-map.png&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;ride-dynamics&quot;&gt;Ride Dynamics&lt;/h3&gt;
&lt;p&gt;Waking up at 6:30am, I ate a full breakfast and set straight to riding. The beginning started off rough, with one of my friends actually crashing while crossing the Golden Gate Bridge due to extreme fog. Luckily he wasn’t badly hurt, and the fog cleared once we passed the bridge. Riding through Sausalito was a pleasure, and we eventually stopped at Fairfax before the climb to eat lunch.&lt;/p&gt;

&lt;p&gt;The climbs started off challenging, at ~6% grade for around 20 minutes. We met up with two other locals, and we tried to hold on while climbing. After, the seven sisters (which is a series of seven descents and climbs) were grueling, since you pickup speed but that final stretch is extremely steep and tough. In fact, after doing the fourth sister I had to stop for a 1 minute break. Lastly, the final stretch was the west summit which was around 300 feet of elevation gain - but that made the view well worth it!&lt;/p&gt;

&lt;p&gt;Descending was actually quite technical, reaching speeds of over 60km/h down the windy roads down a mountain for over 20 minutes will get your adrenaline rush going!&lt;/p&gt;

&lt;h3 id=&quot;west-peak-view&quot;&gt;West Peak View&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/mount-tam.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;beach-view&quot;&gt;Beach View&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/mount-tam-west-bay.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;</content><summary type="html">In my eyes, the ability to, within 20 minutes of riding, be immersed with stunning views, nature and elevation is the single best perk of being in San Francisco. You cannot find anything like it near Waterloo or Toronto, and it feels like you in picturesque scene in a movie!</summary></entry><entry><title type="html">Giant TCR Advanced Road Bike</title><link href="http://localhost:4000/blog/cycling/2018/10/20/giant.html" rel="alternate" type="text/html" title="Giant TCR Advanced Road Bike" /><published>2018-10-20T19:49:29-04:00</published><updated>2018-10-20T19:49:29-04:00</updated><id>http://localhost:4000/blog/cycling/2018/10/20/giant</id><content type="html" xml:base="http://localhost:4000/blog/cycling/2018/10/20/giant.html">&lt;p&gt;What’s more exciting than spending a co-op in San Francisco California and purchased a Giant TCR Advanced with upgraded parts? This road bike is &lt;em&gt;extremely&lt;/em&gt; light, carbon fiber frame, latest generation Ultegra 11-speed shifters giving me a healthy upgrade to a mid-range ~$4000 bike.&lt;/p&gt;

&lt;h3 id=&quot;looks&quot;&gt;Looks&lt;/h3&gt;
&lt;p&gt;The brand isn’t joking, this bike is &lt;em&gt;giant&lt;/em&gt;… it’s designed for people around 6’1 - 6’5 so I barely fit this frame. I brought my Shimano SPD pedals from Canada, and the rest of the components are Shimano Ultegra including brakes, crank and shifters - with the exception of the groupset which is Shimano 105.
&lt;img src=&quot;/blog/assets/giant-roadbike.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;</content><summary type="html">What’s more exciting than spending a co-op in San Francisco California and purchased a Giant TCR Advanced with upgraded parts? This road bike is extremely light, carbon fiber frame, latest generation Ultegra 11-speed shifters giving me a healthy upgrade to a mid-range ~$4000 bike.</summary></entry><entry><title type="html">Living in New York for Eight Months</title><link href="http://localhost:4000/blog/coop/2018/05/03/nyc.html" rel="alternate" type="text/html" title="Living in New York for Eight Months" /><published>2018-05-03T19:49:29-04:00</published><updated>2018-05-03T19:49:29-04:00</updated><id>http://localhost:4000/blog/coop/2018/05/03/nyc</id><content type="html" xml:base="http://localhost:4000/blog/coop/2018/05/03/nyc.html">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;I am fortunate to have received the opportunity of spending 8 months in New York City! I spent a summer here (May - August 2017), and a winter term (January - April 2018) in the upper east side of Manhattan. The experience was fantastic, and this post will be reserved to showing some interesting pictures.&lt;/p&gt;

&lt;h3 id=&quot;up-the-one-world-trade-center&quot;&gt;Up the One World Trade Center&lt;/h3&gt;
&lt;p&gt;One of the tallest buildings in the world&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/nyc-worldtrade.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;governers-island&quot;&gt;Governer’s Island&lt;/h3&gt;
&lt;p&gt;Here is the fanstatic view of Jersey City and Lower Manhattan
&lt;img src=&quot;/blog/assets/nyc-jersey-view.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;yankees-stadium&quot;&gt;Yankee’s Stadium&lt;/h3&gt;
&lt;p&gt;Of course, we got sent to a Toronto vs New York game :)
&lt;img src=&quot;/blog/assets/nyc-yankee-game.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;
&lt;img src=&quot;/blog/assets/nyc-yankee-stadium.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;empire-state&quot;&gt;Empire State&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/blog/assets/nyc-empirestate.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;hudson-mountain-range-breakneck-ridge&quot;&gt;Hudson Mountain Range (Breakneck Ridge)&lt;/h3&gt;
&lt;p&gt;Challenging hike with lots of very steep rocks, but was fun
&lt;img src=&quot;/blog/assets/nyc-breakneck1.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;
&lt;img src=&quot;/blog/assets/nyc-breakneck2.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;intrepid&quot;&gt;Intrepid&lt;/h3&gt;
&lt;p&gt;Located in west Manhattan, it was one of my favourite attractions
&lt;img src=&quot;/blog/assets/nyc-intrepid.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;
You get to go inside the ship, at the hangar, and also a submarine
&lt;img src=&quot;/blog/assets/nyc-intrepid2.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;
&lt;img src=&quot;/blog/assets/nyc-intrepid3.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;brooklyn-bridge&quot;&gt;Brooklyn Bridge&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/blog/assets/nyc-brooklyn-bridge.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;
&lt;img src=&quot;/blog/assets/nyc-brooklyn-bridge2.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;american-museum-of-natural-history&quot;&gt;American Museum of Natural History&lt;/h3&gt;
&lt;p&gt;You can get some very scenic shots here, and they have some cool exhibits
&lt;img src=&quot;/blog/assets/nyc-amnh.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;
&lt;img src=&quot;/blog/assets/nyc-amnh2.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-metropolitan&quot;&gt;The Metropolitan&lt;/h3&gt;
&lt;p&gt;This takes many hours to propertly iterate, I visited at least 4 times (I think)
&lt;img src=&quot;/blog/assets/nyc-met.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;
Corporate housing, anyone?
&lt;img src=&quot;/blog/assets/nyc-met2.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;guggenheim&quot;&gt;Guggenheim&lt;/h3&gt;
&lt;p&gt;The building looks nice, but that’s all I can understand
&lt;img src=&quot;/blog/assets/nyc-guggenheim.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;statue-of-liberty&quot;&gt;Statue of Liberty&lt;/h3&gt;
&lt;p&gt;I didn’t actually go inside, unfortunately
&lt;img src=&quot;/blog/assets/nyc-statue-liberty.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;brooklyn-museum&quot;&gt;Brooklyn Museum&lt;/h3&gt;
&lt;p&gt;Very nice location around prospect park
&lt;img src=&quot;/blog/assets/nyc-brooklyn-museum.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;brooklyn-botanical-garden&quot;&gt;Brooklyn Botanical Garden&lt;/h3&gt;
&lt;p&gt;My favourite part was the Japanese Bonsai
&lt;img src=&quot;/blog/assets/nyc-brooklyn-botanical.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;
&lt;img src=&quot;/blog/assets/nyc-brooklyn-botanical2.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;broadway-show&quot;&gt;Broadway Show&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/blog/assets/nyc-book-mormon.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;
&lt;img src=&quot;/blog/assets/nyc-book-mormon2.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;volunteering-event---building-bikes&quot;&gt;Volunteering Event - Building Bikes&lt;/h3&gt;
&lt;p&gt;Had a couple interns building a few hundred bikes in a day :)
&lt;img src=&quot;/blog/assets/nyc-bob-event.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;bronx-zoo&quot;&gt;Bronx Zoo&lt;/h3&gt;
&lt;p&gt;The zoo was rather large, with quite some variety in animals
&lt;img src=&quot;/blog/assets/nyc-bronx-zoo.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;
&lt;img src=&quot;/blog/assets/nyc-bronx-zoo2.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;new-york-city-museum&quot;&gt;New York City Museum&lt;/h3&gt;
&lt;p&gt;They included an older Bloomberg Terminal :)
&lt;img src=&quot;/blog/assets/nyc-city-museum.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;blizzard--snow-day&quot;&gt;Blizzard / Snow Day&lt;/h3&gt;
&lt;p&gt;Right outside my office, nearly nobody showed up to work
&lt;img src=&quot;/blog/assets/nyc-blizzard.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;office-views&quot;&gt;Office Views&lt;/h3&gt;
&lt;p&gt;View from 731 Lex Pantry (29th Floor)
&lt;img src=&quot;/blog/assets/nyc-lex-29.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;
View from 731 Lex (My Floor / 20th Floor)
&lt;img src=&quot;/blog/assets/nyc-lex-20.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;
View from 120 Park Upper Balcony
&lt;img src=&quot;/blog/assets/nyc-park.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;misc&quot;&gt;Misc&lt;/h3&gt;
&lt;p&gt;This is 3rd avenue, the street behind the building where I lived
&lt;img src=&quot;/blog/assets/nyc-third-avenue.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;</content><summary type="html">Introduction</summary></entry><entry><title type="html">Software Engineering Internship: Bloomberg LP</title><link href="http://localhost:4000/blog/school/2018/05/02/bloomberg-internship.html" rel="alternate" type="text/html" title="Software Engineering Internship: Bloomberg LP" /><published>2018-05-02T19:49:29-04:00</published><updated>2018-05-02T19:49:29-04:00</updated><id>http://localhost:4000/blog/school/2018/05/02/bloomberg-internship</id><content type="html" xml:base="http://localhost:4000/blog/school/2018/05/02/bloomberg-internship.html">&lt;p&gt;&lt;img src=&quot;/blog/assets/logo-bloomberg.png&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Anything I say here is my own words, and does not represent Bloomberg LP. All images inside this post can either be found online or are public information.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt; Table of contents &lt;/b&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#intro&quot;&gt; Introduction &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#whatidid&quot;&gt; What I did at Bloomberg &lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#term1b&quot;&gt; Term 1B: Desktop API / Excel Add-In Team &lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#term2a&quot;&gt; Term 2A: Fixed Income Search Team &lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#application&quot;&gt; Application Process &lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#application&quot;&gt; Applying&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#interviews&quot;&gt; Interviews &lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#compensation&quot;&gt; Compensation&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#projectselection&quot;&gt; Project Selection&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#housing&quot;&gt; Corporate Housing &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#internevents&quot;&gt; Internship Events &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#perks&quot;&gt; Perks &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#office&quot;&gt; 731 Lexington + 120 Park Offices&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div id=&quot;intro&quot;&gt;
&lt;/div&gt;
&lt;p&gt;Bloomberg LP is the world’s largest financial data company and provider of real-time analytics for the financial world. The Bloomberg Terminal, which costs ~$25,000 per customer has over 325,000 subscribers. The Terminal is an entire ecosystem. This includes chat, email, news, financial data, electronic trading platform, and much more.&lt;/p&gt;

&lt;p&gt;The interesting part of Bloomberg is - there’s millions of financial instruments including stocks ticking several times per second in the markets, how can you make use of all that data?&lt;/p&gt;

&lt;p&gt;Just one example, apart from setting all the infrastructure to retrieve, process, refine and persist all the ticks from exchanges around the world - is using sentimental analysis on news stories to predict how the market will react to a news release before humans have time to react.&lt;/p&gt;

&lt;p&gt;I interned at Bloomberg in Summer 2017 and returned for Winter 2018. Below you can see a Terminal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/d/d8/Bloomberg_Terminal.jpg/1200px-Bloomberg_Terminal.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;
&lt;img src=&quot;http://lebow.drexel.edu/sites/default/files/1422027615-bblaunchpadgraphic.PNG&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;term1b&quot;&gt; Term 1B: Desktop API / Excel Add-In Team&lt;/h3&gt;
&lt;p&gt;Click &lt;a href=&quot;/blog/school/2017/08/26/firstcoop.html&quot; target=&quot;_blank&quot;&gt; here &lt;/a&gt; to learn about my work done during my first co-op.&lt;/p&gt;

&lt;h3 id=&quot;term2a&quot;&gt; Term 2A: Fixed Income Search Team &lt;/h3&gt;
&lt;p&gt;Click &lt;a href=&quot;/blog/school/2018/05/01/secondcoop.html&quot; target=&quot;_blank&quot;&gt; here &lt;/a&gt; to learn about my work done during my second co-op.&lt;/p&gt;

&lt;h3 id=&quot;application&quot;&gt; Applying &lt;/h3&gt;
&lt;p&gt;Since I attend the University of Waterloo, I went through our job board. I submitted my resume and grade report. I was then contacted for an on-campus interview. The position was fairly competitive, over 500 applicants for 8 spots. This was for the New York location.&lt;/p&gt;

&lt;h4 id=&quot;interviews&quot;&gt; Interviews &lt;/h4&gt;
&lt;p&gt;The interviews were similar to other top technology companies. First round was 60 minutes with two engineers mostly covering 2 algorithm problems (graphs, linked lists) and some language trivia in Java and C++. Second round was 15 minutes with human resources, 30 minutes with a hiring manager for team selection and 45 minutes with a senior developer for a system design question.&lt;/p&gt;

&lt;h4 id=&quot;compensation&quot;&gt; Compensation &lt;/h4&gt;
&lt;p&gt;Compensation is extremely competitive with the other giants (Google, Facebook), and for returning interns you get an additional $3/hr USD. You also receive corporate housing in Manhattan (or you can take $5100 post-tax stipend), and an additional $2000USD relocation stipend. There is also the option of doing overtime.&lt;/p&gt;

&lt;h4 id=&quot;projectselection&quot;&gt; Project Selection &lt;/h4&gt;
&lt;p&gt;I got to pick from 3-5 projects prior to accepting my offer. I have seen a large variety of projects, though generally you will work on your own self contained project. Common topics include research projects using machine learning which are more proof-of-concept work, or implementing a utility which may hit production. There’s a bunch of projects also involving databases (combdb2), distributed caches, and big data with Hadoop and Spark.&lt;/p&gt;

&lt;h3 id=&quot;housing&quot;&gt; Corporate Housing &lt;/h3&gt;
&lt;p&gt;Bloomberg provides housing. You can get to the office within 10 minutes taking the subway, or choose to walk within 25 minutes. The rooms themselves aren’t the best, but you get used to it. We also get access to the gym downstairs, swimming pool and a few events like concerts/talks within the 92y.&lt;/p&gt;

&lt;p&gt;Below is a picture of the single-room dorm style corporate housing. There is also a shared kitchen and shared washrooms.
&lt;img src=&quot;/blog/assets/bloomberg-housing.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Location wise, it is close to central park and several stores like Wholefoods.
&lt;img src=&quot;/blog/assets/bloomberg-map.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;internevents&quot;&gt; Internship Events&lt;/h3&gt;
&lt;p&gt;We had a ridiculous amount of events, though they are all optional if you’re not into them. Here’s a non-exhaustive list of my summer term:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Data-center tour&lt;/li&gt;
  &lt;li&gt;Broadway show&lt;/li&gt;
  &lt;li&gt;Soccer game @ Yankees stadium&lt;/li&gt;
  &lt;li&gt;Bloomberg’s annual picnic (rented island)&lt;/li&gt;
  &lt;li&gt;Overnight puzzle challenge (16 hours overtime!)&lt;/li&gt;
  &lt;li&gt;Volunteering day building bikes&lt;/li&gt;
  &lt;li&gt;CodeCon algorithm contest&lt;/li&gt;
  &lt;li&gt;Scavenger hunt around New York&lt;/li&gt;
  &lt;li&gt;Board game nights&lt;/li&gt;
  &lt;li&gt;Rubik’s cube event&lt;/li&gt;
  &lt;li&gt;Laser tag&lt;/li&gt;
  &lt;li&gt;Escape room trips&lt;/li&gt;
  &lt;li&gt;Intern project showcase&lt;/li&gt;
  &lt;li&gt;Speaker series (i.e, Michael Bloomberg)&lt;/li&gt;
  &lt;li&gt;Weekly Tech Taco Tuesdays&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;740&quot; height=&quot;430&quot; src=&quot;https://www.youtube.com/embed/LUZZJq9JM4Q&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h3 id=&quot;perks&quot;&gt; Perks&lt;/h3&gt;
&lt;p&gt;You get access and can bring guests to over 90 museums in New York including the 9/11 memorial museum, intrepid, MOMA, Guggenheim, etc. You just have to show your badge!&lt;/p&gt;

&lt;p&gt;For the most important part of every internship, here’s the stuff we got first day in the Winter 2018 term:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/Q08JnBU.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;office&quot;&gt;Office&lt;/h2&gt;
&lt;p&gt;The office is sleek and modern throughout. In New York you will be placed in 1 of 3 offices, either in 731 Lexington (HQ), 120 Park or 919 3rd Avenue. Here are several pictures:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://pixel.nymag.com/imgs/daily/intelligencer/2013/12/02/02-bloomberg-tower-731-lexington.w710.h473.2x.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.vno.com/img/244d4a343d7d2823d1d444cea2acb53174612590++600+0/731l_731l731_lex_1_large_1486362882.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://segd.org/sites/default/files/styles/galleryformatter_slide/public/04-bloomberg-honor-2006-award-gdap.jpg?itok=HGHaSt5r&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://media.glassdoor.com/l/79/d4/37/c5/pantry.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://media.glassdoor.com/l/07/91/27/06/120-park-new-york-office-pantry.jpg&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You get breakfast, soup at 12:00pm, and dinner at 8:00pm. The pantry is always open, and stocked with healthy and unhealthy food, though sometimes there’s special food at certain hours like ice-cream on Fridays and hot chocolate during the winter terms.&lt;/p&gt;

&lt;h2 id=&quot;final-thoughts&quot;&gt;Final Thoughts&lt;/h2&gt;
&lt;p&gt;I had a great time at Bloomberg, as you can probably tell since I chose to return for another internship. When I got my return offer, I also had the option to work in the San Francisco, New York or London offices. Thanks for reading!&lt;/p&gt;</content><summary type="html"></summary></entry><entry><title type="html">Work Term #2: Distributed cross-collection joins</title><link href="http://localhost:4000/blog/school/2018/05/01/secondcoop.html" rel="alternate" type="text/html" title="Work Term #2: Distributed cross-collection joins" /><published>2018-05-01T19:49:29-04:00</published><updated>2018-05-01T19:49:29-04:00</updated><id>http://localhost:4000/blog/school/2018/05/01/secondcoop</id><content type="html" xml:base="http://localhost:4000/blog/school/2018/05/01/secondcoop.html">&lt;p&gt;&lt;img src=&quot;/blog/assets/logo-bloomberg.png&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Anything I say here is my own words, and does not represent Bloomberg LP. All images inside this post can either be found online or are public information.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;a href=&quot;/blog/school/2018/05/02/bloomberg-internship.html&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; to learn more about my overall experience at Bloomberg.&lt;/p&gt;

&lt;h3 id=&quot;term1b&quot;&gt; Fixed Income Core - Search Team&lt;/h3&gt;
&lt;p&gt;In Winter 2018, I joined the Fixed Income Search Team. My team was responsible for powering all Fixed Income Search functionality on Bloomberg Terminals (including &lt;code&gt;SRCH&lt;/code&gt; and 70+ other functions including &lt;code&gt;DDIS&lt;/code&gt; and &lt;code&gt;LEAG&lt;/code&gt;). My work was heavily focused on their search infrastructure, and extending the capabilities of Apache Solr’s (open-source search platform) cross-collection join.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apache-solr-lucene.png&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Introducing high-performance join capabilities for sharded collections and SolrCloud clusters to Solr was my primary project. By allowing for joins across sharded collections, the Lucene indices could be scaled horizontally across many nodes allowing for larger collections and faster performance. Joins across SolrCloud clusters allows different teams to perform joins across their datasets without the need of duplicate data - which was an issue for our team. As teams shift towards Bloomberg’s new infrastructure for “Solr as a service”, teams could very quickly join across data-sets by simply providing the ZooKeeper host address for the other SolrCloud cluster. This has impact not only for my team, but for many other teams across all of Bloomberg.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// ZooKeeper host allows for retrieval of clusterstate for cross-cloud joins
fq={!join from=inner_id to=outer_id zkHost=192.12.3.17 fromIndex=cB}zzz:vvv

// Allows for nested joins as well
fq={!join from=inner_id to=outer_id zkHost=192.12.3.17 fromFq=&quot;....&quot; fromIndex=cB}zzz:vvv
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The general stages of the join are:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;The join is invoked as a &lt;code class=&quot;highlighter-rouge&quot;&gt;PostFilter&lt;/code&gt;, meaning that its caching behavior indicates it runs after the other &lt;code class=&quot;highlighter-rouge&quot;&gt;fq&lt;/code&gt; queries. This is the best practice for heavier queries.&lt;/li&gt;
  &lt;li&gt;The containerization process begins in &lt;code class=&quot;highlighter-rouge&quot;&gt;JoinQParserPlugin&lt;/code&gt;, which then will create a new &lt;code class=&quot;highlighter-rouge&quot;&gt;CrossCloudJoinPostFilter&lt;/code&gt; instead of the traditional single-sharded cross-core joins.&lt;/li&gt;
  &lt;li&gt;After instantiating the query object, it extends the &lt;code class=&quot;highlighter-rouge&quot;&gt;ExtendedQueryBase&lt;/code&gt;, meaning terms will be collected in &lt;code class=&quot;highlighter-rouge&quot;&gt;DelegatingCollector&lt;/code&gt; and intersected with the “from collection” documents.&lt;/li&gt;
  &lt;li&gt;Fetching the ZooKeeper clusterstate information, making it possible to map/reduce to all the shards and retrieve the values in a distributed fashion.&lt;/li&gt;
  &lt;li&gt;For rapid retrieval of fields, Lucene uninverting data-structures (namely &lt;code class=&quot;highlighter-rouge&quot;&gt;NumericDocValues&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;BinaryDocValues&lt;/code&gt;) are used allowing for &lt;code class=&quot;highlighter-rouge&quot;&gt;O(n)&lt;/code&gt; retrieval (&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; = document count)&lt;/li&gt;
  &lt;li&gt;To trigger the uninverting data-structures, a custom request handler is invoked allowing for nested joins and marshalling the results back in &lt;code class=&quot;highlighter-rouge&quot;&gt;javabin&lt;/code&gt; serialization format.&lt;/li&gt;
  &lt;li&gt;Results are unmarshalled and aggregated in either a hashset or roaring bitmap (cache friendly compressed bitset) and intersected while traversing using &lt;code class=&quot;highlighter-rouge&quot;&gt;LeafReaderContext&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Collect documents that intersect in the &lt;code class=&quot;highlighter-rouge&quot;&gt;DelegatingCollector&lt;/code&gt; if they are found in the bitmap or hashset - these are the final join result documents.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Performance is critical for Bloomberg Terminal users, and as a result the join was very heavily profiled and optimized. In short, migrating from streaming expression’s intersect to the newer join code reduces query times on average by 87.3%! I created an automated benchmarking system allowing for chart visualizations and regressions, appropriate JVM warming up, collection cache resetting along with deploying SolrCloud clusters and ZooKeeper ensembles across Bloomberg’s New York and New Jersey datacenters.&lt;/p&gt;

&lt;p&gt;The most significant speed-up came from leveraging uninverting data-structures from Lucene, which allow for rapid field-lookups. By creating a custom request handler endpoint on Solr, this allows for rapid retrieval of fields that can be sent back in proprietary binary format over the network. I also researched heavily different data-structures and compression techniques. This included leveraging LZ4, Burrows-Wheeler Transform and Huffman Coding for strings, in addition to a custom join for my team leveraging compressed (roaring) bitmaps. At the end, I prepared the patch to be pushed upstream, which included documentation and unit tests.&lt;/p&gt;

&lt;p&gt;For my team specifically, the compressed roaring bitmaps allowed for much superior performance due to CPU spatial cache locality, improvement of runs and reducing over the network latency via compression. Following the original implementation of the roaring bitmaps, the bitmaps is partioning into three types of sub-bitmaps depending on the density of runs.&lt;/p&gt;

&lt;p&gt;The size of the partions are set to align with CPU cache lines, below is an example (albiet using the simpler binary-type roaring model):
&lt;img src=&quot;/blog/assets/bloomberg-roaring.png&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lastly, I also worked on designing a middleware service integrating Solr with Bloomberg’s service oriented architecture. Applications of this includes augmenting search results with real-time pricing, leveraging Apache Spark services for time-series bond screening and more! This project involved creating custom handlers in Java for Solr, in addition to creating schemas and a C++ service that can interact with other Bloomberg services.&lt;/p&gt;

&lt;p&gt;As always, I would like to thank my mentor and team lead (in addition to the open-source community!) for providing guidance on my work. I had a blast working on Solr, and found the project very challenging but also rewarding.&lt;/p&gt;</content><summary type="html"></summary></entry><entry><title type="html">Work Term #1: Recommender systems and chatbots</title><link href="http://localhost:4000/blog/school/2017/08/26/firstcoop.html" rel="alternate" type="text/html" title="Work Term #1: Recommender systems and chatbots" /><published>2017-08-26T19:49:29-04:00</published><updated>2017-08-26T19:49:29-04:00</updated><id>http://localhost:4000/blog/school/2017/08/26/firstcoop</id><content type="html" xml:base="http://localhost:4000/blog/school/2017/08/26/firstcoop.html">&lt;p&gt;&lt;img src=&quot;/blog/assets/logo-bloomberg.png&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Anything I say here is my own words, and does not represent Bloomberg LP. All images inside this post can either be found online or are public information.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;a href=&quot;/blog/school/2018/05/02/bloomberg-internship.html&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; to learn more about my overall experience at Bloomberg.&lt;/p&gt;

&lt;h3 id=&quot;term1b&quot;&gt; Desktop API / Excel Add-In Team&lt;/h3&gt;
&lt;p&gt;In Summer 2017, for my first co-op term, I joined the Excel Add-In team, also known as Desktop API. The Bloomberg Terminal comes with an Excel Add-In, allowing for users to import financial data from Bloomberg straight into their Excel spreadsheets and perform financial analysis. This includes both historical data in addition to real-time (for which the Excel cells update in real-time). There was a wide gamut of other features as well, such as charting and templates for financial documents.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/bloomberg-excel.png&quot; alt=&quot;I'm an inline-style link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My first project was developing a machine learning collaborative filtering recommender system to generate personalized recommendations for the 250,000+ monthly Excel Add-In users in terms of which Excel Add-In functions they should try. This was part of “Feature Explorer”, in an effort to make the users to become acquainted with the various functions Bloomberg provides in their Add-In. As part of my project, I worked with Python and several scientific/machine learning frameworks and libraries including NumPy, SciPy, Matplotlib and Scikit-Learn.  &lt;br /&gt;
&lt;br /&gt;&lt;br /&gt; I initially prototyped several different approaches to solving this problem, but after guidance from members of Bloomberg’s data-science teams we settled on an approach using statistical analysis on different clusters of users based on Bloomberg Terminal data. While I cannot go into details of the algorithm, some neat optimizations included lazily precomputing recommendations per-cluster instead of per-user, such that only once the service is queried - then it would lookup the historical feature usage data for that user and provide a recommendation. This significantly sped-up training time for the algorithm, while generating the recommendations remained near-constant time.
&lt;br /&gt;&lt;br /&gt; After completing my first project I received another one, which was prototyping chatbot approaches for generating associated BQL (Bloomberg Query Language) queries for financial questions. Since my team was heavily invested in the Microsoft ecosystem it was worth testing their newly released Microsoft Bot Framework, which leverages their Cognitive Services suite for ML/NLP. 
&lt;br /&gt;&lt;br /&gt; This project was much simpler in terms of data-science, but more challenge in terms of software engineering. The chatbot had many moving components which meant having a solid architectural design was critical. Examples include handling the user-interaction (localization, user interface, chatbot dialogs), fetching financial data from Bloomberg, fetching ML/NLP information from Cognitive Services and other sources, generating the BQL queries, all while ensuring everything is modular and adding/removing functionality can work flawlessly. It was surprisingly a lot of code, but I worked in Node.js which was fairly straightforward and fun to work with.
&lt;br /&gt;&lt;br /&gt;All in all, I enjoyed my first real work-term and had a helpful mentor and manager who were very supportive and provided feedback. I learned a lot about machine learning and web development in this internship, both of which I found very fascinating and will be useful tools for the future.
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</content><summary type="html"></summary></entry></feed>
